install.packages("brms")
install.packages(c("data.table", "coda", "mvtnorm", "devtools", "MASS", "ellipse", "rstan", "coda", "markdown", "mcmc", "MCMCpack", "MuMIn", "reshape2", "rmarkdown", "brms", "tidyverse", "bayesplot", "shinystan", "lme4", "viridis", "yarrr", "afex", "bootES"), dependencies = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
MAKEVARS <- file.path(dotR, "Makevars")
if (!file.exists(MAKEVARS)) file.create(MAKEVARS)
cat(
"\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined -Wno-unknown-pragmas",
"\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = MAKEVARS,
sep = "\n",
append = TRUE
)
# print the contents to the console
cat(readLines(MAKEVARS), sep = "\n")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
setwd("~/Documents/catastrophic forgetting/empirical/data/set switching")
cat("\014")
rm(list = ls())
dev.off()
library(tidyverse)
library(ggplot2)
library(Rmisc)
Data_pp1<- read.delim("set_switching_subject_1_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp2<- read.delim("set_switching_subject_2_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp3<- read.delim("set_switching_subject_3_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp4<- read.delim("set_switching_subject_4_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data<-rbind(Data_pp1,Data_pp2,Data_pp3,Data_pp4)
Data[1:10,]
View(Data)
Data=Data[,5:18]# use only relevant variables
for (data in c(1:1600)){
if (Data$Tr[data]>0){
Data$corrP[data]=Data$corr[data-1]
}
if (Data$Switch_pass[data]<10){
Data$cond[data]=1
}else {
Data$cond[data]=2
}
}
Data$corr<-Data$corr*100
Data$RT<-Data$RT*1000
Data_nolates<-Data[!(Data$corr==2),]
Data_nolates<-Data_nolates[!(Data_nolates$Tr==0),]
Data_nolates<-Data_nolates[!(Data_nolates$Break_pass==0),]
Data_nolates<-Data_nolates[!(Data_nolates$corrP==2),]
Data_noerrors<-Data_nolates[!(Data_nolates$corr==0),]
means=aggregate(Data_nolates[,8:9], list(Data_nolates$ppnr),mean)
View(Data_nolates)
View(Data_nolates)
means=aggregate(Data_nolates[,9:1], list(Data_nolates$ppnr),mean)
View(means)
View(means)
means=aggregate(Data_nolates[,9:10], list(Data_nolates$ppnr),mean)
View(means)
View(means)
means_RT=aggregate(Data_noerrors[,9], list(Data_noerrors$ppnr),mean)
means$RT<-means_RT$x
pirateplot(corr~ppnr, data=Data_nolates)
library(yarrr)
pirateplot(corr~ppnr, data=Data_nolates)
Data_nolates<-Data[!(Data$corr==2),]
setwd("~/Documents/catastrophic forgetting/empirical/data/set switching")
cat("\014")
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(yarrr)
Data_pp1<- read.delim("set_switching_subject_1_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp2<- read.delim("set_switching_subject_2_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp3<- read.delim("set_switching_subject_3_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp4<- read.delim("set_switching_subject_4_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data<-rbind(Data_pp1,Data_pp2,Data_pp3,Data_pp4)
Data[1:10,]
Data=Data[,5:18]# use only relevant variables
for (data in c(1:1600)){
if (Data$Tr[data]>0){
Data$corrP[data]=Data$corr[data-1]
}
if (Data$Switch_pass[data]<10){
Data$cond[data]=1
}else {
Data$cond[data]=2
}
}
Data_nolates<-Data[!(Data$corr==2),]
Data_nolates<-Data_nolates[!(Data_nolates$Tr==0),]
Data_nolates<-Data_nolates[!(Data_nolates$Break_pass==0),]
Data_nolates<-Data_nolates[!(Data_nolates$corrP==2),]
Data_noerrors<-Data_nolates[!(Data_nolates$corr==0),]
Data$corr<-Data$corr*100
Data$RT<-Data$RT*1000
means=aggregate(Data_nolates[,9:10], list(Data_nolates$ppnr),mean)
means_RT=aggregate(Data_noerrors[,9], list(Data_noerrors$ppnr),mean)
means$RT<-means_RT$x
pirateplot(corr~ppnr, data=Data_nolates)
pirateplot(corr~ppnr, data=Data_nolates)
pirateplot(RT~ppnr, data=Data_noerrors)
boxplot(means$corr)
boxplot(means$RT)
setwd("~/Documents/catastrophic forgetting/empirical/data/set switching")
cat("\014")
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(yarrr)
Data_pp1<- read.delim("set_switching_subject_1_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp2<- read.delim("set_switching_subject_2_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp3<- read.delim("set_switching_subject_3_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp4<- read.delim("set_switching_subject_4_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data<-rbind(Data_pp1,Data_pp2,Data_pp3,Data_pp4)
Data[1:10,]
Data=Data[,5:18]# use only relevant variables
for (data in c(1:1600)){
if (Data$Tr[data]>0){
Data$corrP[data]=Data$corr[data-1]
}
if (Data$Switch_pass[data]<10){
Data$cond[data]=1
}else {
Data$cond[data]=2
}
}
Data_nolates<-Data[!(Data$corr==2),]
Data_nolates<-Data_nolates[!(Data_nolates$Tr==0),]
Data_nolates<-Data_nolates[!(Data_nolates$Break_pass==0),]
Data_nolates<-Data_nolates[!(Data_nolates$corrP==2),]
Data$corr<-Data$corr*100
Data$RT<-Data$RT*1000
Data_noerrors<-Data_nolates[!(Data_nolates$corr==0),]
means=aggregate(Data_nolates[,9:10], list(Data_nolates$ppnr),mean)
means_RT=aggregate(Data_noerrors[,9], list(Data_noerrors$ppnr),mean)
means$RT<-means_RT$x
pirateplot(corr~ppnr, data=Data_nolates)
setwd("~/Documents/catastrophic forgetting/empirical/data/set switching")
cat("\014")
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(Rmisc)
library(yarrr)
Data_pp1<- read.delim("set_switching_subject_1_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp2<- read.delim("set_switching_subject_2_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp3<- read.delim("set_switching_subject_3_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data_pp4<- read.delim("set_switching_subject_4_Session_0_data.tsv", header = TRUE, sep = "\t", quote = "\"",dec = ".", fill = TRUE)
Data<-rbind(Data_pp1,Data_pp2,Data_pp3,Data_pp4)
Data[1:10,]
Data=Data[,5:18]# use only relevant variables
for (data in c(1:1600)){
if (Data$Tr[data]>0){
Data$corrP[data]=Data$corr[data-1]
}
if (Data$Switch_pass[data]<10){
Data$cond[data]=1
}else {
Data$cond[data]=2
}
}
Data_nolates<-Data[!(Data$corr==2),]
Data_nolates<-Data_nolates[!(Data_nolates$Tr==0),]
Data_nolates<-Data_nolates[!(Data_nolates$Break_pass==0),]
Data_nolates<-Data_nolates[!(Data_nolates$corrP==2),]
Data$corr<-Data_nolates$corr*100
Data$RT<-Data_nolates$RT*1000
Data_nolates$corr<-Data_nolates$corr*100
Data_nolates$RT<-Data_nolates$RT*1000
Data_noerrors<-Data_nolates[!(Data_nolates$corr==0),]
means=aggregate(Data_nolates[,9:10], list(Data_nolates$ppnr),mean)
means_RT=aggregate(Data_noerrors[,9], list(Data_noerrors$ppnr),mean)
means$RT<-means_RT$x
pirateplot(corr~ppnr, data=Data_nolates)
pirateplot(RT~ppnr, data=Data_noerrors)
boxplot(means$corr)
boxplot(means$RT)
for (sj in c(1:14)){
if (means$RT[sj]<75){
Data_nolates<-Data_nolates[!(Data_nolates$ppnr==sj),]
Data_noerrors<-Data_noerrors[!(Data_noerrors$ppnr==sj),]
}
}
for (sj in c(1:4)){
if (means$RT[sj]<75){
Data_nolates<-Data_nolates[!(Data_nolates$ppnr==sj),]
Data_noerrors<-Data_noerrors[!(Data_noerrors$ppnr==sj),]
}
}
First_trials<-Data[!(Data$Switch_pass>29),]
modeldata<-First_trials[(First_trials$part<3),]
modeldata$trial<-c(1:90)
modeldata<-modeldata[!(modeldata$corr==2),]
fig7<-summarySE(modeldata, measurevar = "corr", groupvars="trial")
fig8<-summarySE(modeldata, measurevar = "RT", groupvars="trial")
ggplot(fig7, aes(x=trial, y=corr)) +
geom_ribbon(aes(ymin=corr-ci, ymax=corr+ci), alpha=0.3)+
geom_line()+
geom_point()+
geom_vline(xintercept=30, color="red",linetype="dashed")+
geom_vline(xintercept=60, color="red",linetype="dashed")+
theme_classic()+
scale_y_continuous("Accuracy %",limits = c(-20, 120),breaks = seq(0, 100, 20)) +
labs(x="Trial")
ggplot(fig7, aes(x=trial, y=corr)) +
geom_ribbon(aes(ymin=corr-ci, ymax=corr+ci), alpha=0.3)+
geom_line()+
geom_point()+
geom_vline(xintercept=30, color="red",linetype="dashed")+
geom_vline(xintercept=60, color="red",linetype="dashed")+
theme_classic()+
scale_y_continuous("Accuracy %",limits = c(-0.20, 1.20),breaks = seq(0, 1, 0.20)) +
labs(x="Trial")
View(fig7)
View(fig7)
ggplot(fig7, aes(x=trial, y=corr)) +
geom_ribbon(aes(ymin=corr-ci, ymax=corr+ci), alpha=0.3)+
geom_line()+
geom_point()+
geom_vline(xintercept=30, color="red",linetype="dashed")+
geom_vline(xintercept=60, color="red",linetype="dashed")+
theme_classic()+
scale_y_continuous("Accuracy %",limits = c(-0.20, 1.20),breaks = seq(0, 1, 0.20)) +
labs(x="Trial")
ggplot(fig8, aes(x=trial, y=RT)) +
geom_ribbon(aes(ymin=RT-ci, ymax=RT+ci), alpha=0.3)+
geom_line()+
geom_point()+
geom_vline(xintercept=20, color="red",linetype="dashed")+
geom_vline(xintercept=40, color="red",linetype="dashed")+
theme_classic()+
labs(y="RT(ms)")
ggplot(fig8, aes(x=trial, y=RT)) +
geom_ribbon(aes(ymin=RT-ci, ymax=RT+ci), alpha=0.3)+
geom_line()+
geom_point()+
geom_vline(xintercept=30, color="red",linetype="dashed")+
geom_vline(xintercept=60, color="red",linetype="dashed")+
theme_classic()+
labs(y="RT(ms)")
model_fit<-lm(corr~part*Switch_pass,data=Data_nolates)
summary(model_fit)
fit_corr<-lm(corr~1+cond+part+corrP+FBP+FBP:corrP,data=Data_nolates)
fit_corr<-lm(corr~1+cond*part*corrP,data=Data_nolates)
summary(fit_corr)
fit_corr<-lm(corr~cond*part*corrP,data=Data_nolates)
fit_RT<-lm(RT~cond*part*corrP,data=Data_noerrors)
summary(fit_corr)
summary(fit_RT)
pirateplot(formula = corr~ corrP, data=Data_nolates)
pirateplot(formula = RT~ corrP, data=Data_noerrors)
pirateplot(formula = corr~ part, data=Data_nolates)
pirateplot(formula = corr~ cond, data=Data_nolates)
pirateplot(formula = RT~ part, data=Data_noerrors)
pirateplot(formula = RT~ cond, data=Data_noerrors)
fig1<- summarySE(Data_nolates, measurevar="corr", groupvars=c("FBP","corrP"))
fig2<- summarySE(Data_noerrors, measurevar="RT", groupvars=c("FBP","corrP"))
fig1$corrP<-as.factor(fig1$corrP)
fig1$FBP<-as.factor(fig1$FBP)
fig2$corrP<-as.factor(fig2$corrP)
fig2$FBP<-as.factor(fig2$FBP)
ggplot(fig2, aes(x=FBP, y=RT, colour=corrP, fill=corrP)) +
geom_errorbar(aes(ymin=RT-ci, ymax=RT+ci), position=position_dodge())+
geom_bar(stat="identity",position=position_dodge())+
labs(x="Feedback N-1")+
labs(fill="Accuracy N-1")+
scale_x_discrete(labels=c("0"="negative", "1"="positive"))+
scale_fill_discrete(labels=c("0"="error","1"="correct"))
# accuracy short or long after rule switch
ggplot(fig3, aes(x=cond, y=corr)) +
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=corr-ci, ymax=corr+ci))+
labs(x="After rule switch")+
labs(y="Accuracy %")+
scale_x_discrete(labels=c("1"="early", "2"="late"))
fig3<-summarySE(Data_nolates, measurevar="corr", groupvars=c("cond"))
fig4<-summarySE(Data_noerrors, measurevar="RT", groupvars=c("part"))
fig3$cond<-as.factor(fig3$cond)
# accuracy short or long after rule switch
ggplot(fig3, aes(x=cond, y=corr)) +
geom_bar(stat="identity")+
geom_errorbar(aes(ymin=corr-ci, ymax=corr+ci))+
labs(x="After rule switch")+
labs(y="Accuracy %")+
scale_x_discrete(labels=c("1"="early", "2"="late"))
#RT evolution over blocks
ggplot(fig4, aes(x=part, y=RT)) +
geom_ribbon(aes(ymin=RT-ci, ymax=RT+ci), alpha=0.5)+
geom_line()+
geom_point()+
labs(x="(rule)block")
fig5<-summarySE(Data_noerrors, measurevar="RT", groupvars=c("Switch_pass"))
ggplot(fig5, aes(x=Switch_pass, y=RT)) +
geom_ribbon(aes(ymin=RT-ci, ymax=RT+ci), alpha=0.5)+
geom_line()+
geom_point()+
labs(x="Trial after switch")
fig6<-summarySE(Data_nolates, measurevar="corr", groupvars=c("Switch_pass"))
ggplot(fig6, aes(x=Switch_pass, y=corr)) +
geom_ribbon(aes(ymin=corr-ci, ymax=corr+ci), alpha=0.5)+
geom_line()+
geom_point()+
labs(x="Trial after switch")
fig9<-summarySE(Data_nolates, measurevar = "corr", groupvars="corrP")
fig10<-summarySE(Data_nolates, measurevar = "corr", groupvars="FBP")
